import { PrismaClient } from '@prisma/client';
import { SUPPORTED_LANGUAGES } from '../src/config/languages';

const prisma = new PrismaClient();

interface SampleWords {
  [key: string]: Array<{
    originalText: string;
    translationText: string;
    pronunciation?: string;
    difficulty?: number;
  }>;
}

const SAMPLE_WORDS: SampleWords = {
  he: [
    { originalText: '◊©◊ú◊ï◊ù', translationText: 'hello', pronunciation: 'shalom', difficulty: 1 },
    { originalText: '◊™◊ï◊ì◊î', translationText: 'thank you', pronunciation: 'toda', difficulty: 1 },
    { originalText: '◊ë◊ë◊ß◊©◊î', translationText: 'please', pronunciation: 'bevakasha', difficulty: 1 },
    { originalText: '◊õ◊ü', translationText: 'yes', pronunciation: 'ken', difficulty: 1 },
    { originalText: '◊ú◊ê', translationText: 'no', pronunciation: 'lo', difficulty: 1 },
    { originalText: '◊û◊î ◊©◊ú◊ï◊û◊ö', translationText: 'how are you', pronunciation: 'ma shlomcha', difficulty: 2 },
    { originalText: '◊ê◊†◊ô ◊ò◊ï◊ë', translationText: 'I am good', pronunciation: 'ani tov', difficulty: 2 },
    { originalText: '◊ú◊î◊™◊®◊ê◊ï◊™', translationText: 'goodbye', pronunciation: 'lehitraot', difficulty: 2 },
    { originalText: '◊ë◊ï◊ß◊® ◊ò◊ï◊ë', translationText: 'good morning', pronunciation: 'boker tov', difficulty: 2 },
    { originalText: '◊ú◊ô◊ú◊î ◊ò◊ï◊ë', translationText: 'good night', pronunciation: 'layla tov', difficulty: 2 },
  ],
  es: [
    { originalText: 'hola', translationText: 'hello', difficulty: 1 },
    { originalText: 'gracias', translationText: 'thank you', difficulty: 1 },
    { originalText: 'por favor', translationText: 'please', difficulty: 1 },
    { originalText: 's√≠', translationText: 'yes', difficulty: 1 },
    { originalText: 'no', translationText: 'no', difficulty: 1 },
    { originalText: '¬øc√≥mo est√°s?', translationText: 'how are you', difficulty: 2 },
    { originalText: 'estoy bien', translationText: 'I am good', difficulty: 2 },
    { originalText: 'adi√≥s', translationText: 'goodbye', difficulty: 2 },
    { originalText: 'buenos d√≠as', translationText: 'good morning', difficulty: 2 },
    { originalText: 'buenas noches', translationText: 'good night', difficulty: 2 },
  ],
  fr: [
    { originalText: 'bonjour', translationText: 'hello', difficulty: 1 },
    { originalText: 'merci', translationText: 'thank you', difficulty: 1 },
    { originalText: 's\'il vous pla√Æt', translationText: 'please', difficulty: 1 },
    { originalText: 'oui', translationText: 'yes', difficulty: 1 },
    { originalText: 'non', translationText: 'no', difficulty: 1 },
    { originalText: 'comment allez-vous?', translationText: 'how are you', difficulty: 2 },
    { originalText: 'je vais bien', translationText: 'I am good', difficulty: 2 },
    { originalText: 'au revoir', translationText: 'goodbye', difficulty: 2 },
    { originalText: 'bonne nuit', translationText: 'good night', difficulty: 2 },
    { originalText: 'excusez-moi', translationText: 'excuse me', difficulty: 2 },
  ],
  it: [
    { originalText: 'ciao', translationText: 'hello', difficulty: 1 },
    { originalText: 'grazie', translationText: 'thank you', difficulty: 1 },
    { originalText: 'per favore', translationText: 'please', difficulty: 1 },
    { originalText: 's√¨', translationText: 'yes', difficulty: 1 },
    { originalText: 'no', translationText: 'no', difficulty: 1 },
    { originalText: 'come stai?', translationText: 'how are you', difficulty: 2 },
    { originalText: 'sto bene', translationText: 'I am good', difficulty: 2 },
    { originalText: 'arrivederci', translationText: 'goodbye', difficulty: 2 },
    { originalText: 'buongiorno', translationText: 'good morning', difficulty: 2 },
    { originalText: 'buonanotte', translationText: 'good night', difficulty: 2 },
  ],
  de: [
    { originalText: 'hallo', translationText: 'hello', difficulty: 1 },
    { originalText: 'danke', translationText: 'thank you', difficulty: 1 },
    { originalText: 'bitte', translationText: 'please', difficulty: 1 },
    { originalText: 'ja', translationText: 'yes', difficulty: 1 },
    { originalText: 'nein', translationText: 'no', difficulty: 1 },
    { originalText: 'wie geht es dir?', translationText: 'how are you', difficulty: 2 },
    { originalText: 'mir geht es gut', translationText: 'I am good', difficulty: 2 },
    { originalText: 'auf wiedersehen', translationText: 'goodbye', difficulty: 2 },
    { originalText: 'guten morgen', translationText: 'good morning', difficulty: 2 },
    { originalText: 'gute nacht', translationText: 'good night', difficulty: 2 },
  ],
  ru: [
    { originalText: '–ø—Ä–∏–≤–µ—Ç', translationText: 'hello', pronunciation: 'privet', difficulty: 1 },
    { originalText: '—Å–ø–∞—Å–∏–±–æ', translationText: 'thank you', pronunciation: 'spasibo', difficulty: 1 },
    { originalText: '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞', translationText: 'please', pronunciation: 'pozhaluysta', difficulty: 1 },
    { originalText: '–¥–∞', translationText: 'yes', pronunciation: 'da', difficulty: 1 },
    { originalText: '–Ω–µ—Ç', translationText: 'no', pronunciation: 'net', difficulty: 1 },
    { originalText: '–∫–∞–∫ –¥–µ–ª–∞?', translationText: 'how are you', pronunciation: 'kak dela?', difficulty: 2 },
    { originalText: '—Ö–æ—Ä–æ—à–æ', translationText: 'good', pronunciation: 'khorosho', difficulty: 2 },
    { originalText: '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è', translationText: 'goodbye', pronunciation: 'do svidaniya', difficulty: 2 },
    { originalText: '–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ', translationText: 'good morning', pronunciation: 'dobroye utro', difficulty: 2 },
    { originalText: '—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏', translationText: 'good night', pronunciation: 'spokoynoy nochi', difficulty: 2 },
  ],
  zh: [
    { originalText: '‰Ω†Â•Ω', translationText: 'hello', pronunciation: 'n«ê h«éo', difficulty: 1 },
    { originalText: 'Ë∞¢Ë∞¢', translationText: 'thank you', pronunciation: 'xi√® xi√®', difficulty: 1 },
    { originalText: 'ËØ∑', translationText: 'please', pronunciation: 'q«êng', difficulty: 1 },
    { originalText: 'ÊòØ', translationText: 'yes', pronunciation: 'sh√¨', difficulty: 1 },
    { originalText: '‰∏çÊòØ', translationText: 'no', pronunciation: 'b√π sh√¨', difficulty: 1 },
    { originalText: '‰Ω†Â•ΩÂêó?', translationText: 'how are you', pronunciation: 'n«ê h«éo ma?', difficulty: 2 },
    { originalText: 'ÊàëÂæàÂ•Ω', translationText: 'I am good', pronunciation: 'w«í hƒõn h«éo', difficulty: 2 },
    { originalText: 'ÂÜçËßÅ', translationText: 'goodbye', pronunciation: 'z√†i ji√†n', difficulty: 2 },
    { originalText: 'Êó©‰∏äÂ•Ω', translationText: 'good morning', pronunciation: 'z«éo sh√†ng h«éo', difficulty: 2 },
    { originalText: 'ÊôöÂÆâ', translationText: 'good night', pronunciation: 'w«én ƒÅn', difficulty: 2 },
  ],
  pt: [
    { originalText: 'ol√°', translationText: 'hello', difficulty: 1 },
    { originalText: 'obrigado', translationText: 'thank you', difficulty: 1 },
    { originalText: 'por favor', translationText: 'please', difficulty: 1 },
    { originalText: 'sim', translationText: 'yes', difficulty: 1 },
    { originalText: 'n√£o', translationText: 'no', difficulty: 1 },
    { originalText: 'como est√°?', translationText: 'how are you', difficulty: 2 },
    { originalText: 'estou bem', translationText: 'I am good', difficulty: 2 },
    { originalText: 'tchau', translationText: 'goodbye', difficulty: 2 },
    { originalText: 'bom dia', translationText: 'good morning', difficulty: 2 },
    { originalText: 'boa noite', translationText: 'good night', difficulty: 2 },
  ],
  ja: [
    { originalText: '„Åì„Çì„Å´„Å°„ÅØ', translationText: 'hello', pronunciation: 'konnichiwa', difficulty: 1 },
    { originalText: '„ÅÇ„Çä„Åå„Å®„ÅÜ', translationText: 'thank you', pronunciation: 'arigatou', difficulty: 1 },
    { originalText: '„ÅäÈ°ò„ÅÑ„Åó„Åæ„Åô', translationText: 'please', pronunciation: 'onegaishimasu', difficulty: 1 },
    { originalText: '„ÅØ„ÅÑ', translationText: 'yes', pronunciation: 'hai', difficulty: 1 },
    { originalText: '„ÅÑ„ÅÑ„Åà', translationText: 'no', pronunciation: 'iie', difficulty: 1 },
    { originalText: 'ÂÖÉÊ∞ó„Åß„Åô„Åã?', translationText: 'how are you', pronunciation: 'genki desu ka?', difficulty: 2 },
    { originalText: 'ÂÖÉÊ∞ó„Åß„Åô', translationText: 'I am good', pronunciation: 'genki desu', difficulty: 2 },
    { originalText: '„Åï„Çà„ÅÜ„Å™„Çâ', translationText: 'goodbye', pronunciation: 'sayounara', difficulty: 2 },
    { originalText: '„Åä„ÅØ„Çà„ÅÜ', translationText: 'good morning', pronunciation: 'ohayou', difficulty: 2 },
    { originalText: '„Åä„ÇÑ„Åô„Åø', translationText: 'good night', pronunciation: 'oyasumi', difficulty: 2 },
  ],
};

async function seedLanguages() {
  console.log('üåç Starting language seeding...');
  
  try {
    // Create languages
    console.log('üìù Creating languages...');
    for (const [code, config] of Object.entries(SUPPORTED_LANGUAGES)) {
      await prisma.language.upsert({
        where: { code },
        update: {
          name: config.name,
          nativeName: config.nativeName,
          isRTL: config.isRTL,
          fontFamily: config.fontFamily,
          isActive: config.isActive,
        },
        create: {
          code,
          name: config.name,
          nativeName: config.nativeName,
          isRTL: config.isRTL,
          fontFamily: config.fontFamily,
          isActive: config.isActive,
        },
      });
      console.log(`‚úÖ Created/Updated language: ${config.name} (${code})`);
    }

    // Create default sections and words for each language
    console.log('üìö Creating default sections and words...');
    for (const [code, words] of Object.entries(SAMPLE_WORDS)) {
      const language = await prisma.language.findUnique({
        where: { code },
      });

      if (!language) {
        console.log(`‚ùå Language ${code} not found, skipping...`);
        continue;
      }

      const sectionName = 'Essential Phrases';
      
      // Create or find the section
      const section = await prisma.section.upsert({
        where: { 
          name_languageId: { 
            name: sectionName, 
            languageId: language.id 
          } 
        },
        update: {},
        create: {
          name: sectionName,
          description: `Essential phrases for learning ${language.name}`,
          isDefault: true,
          languageId: language.id,
        },
      });

      // Add words to the section (skip if they already exist)
      const existingWords = await prisma.word.findMany({
        where: { sectionId: section.id },
      });
      
      if (existingWords.length === 0) {
        await prisma.word.createMany({
          data: words.map(word => ({
            sectionId: section.id,
            languageId: language.id,
            originalText: word.originalText,
            translationText: word.translationText,
            pronunciation: word.pronunciation,
            difficulty: word.difficulty || 1,
          })),
        });
      }

      console.log(`‚úÖ Created section "${sectionName}" with ${words.length} words for ${language.name}`);
    }

    console.log('üéâ Language seeding completed successfully!');
  } catch (error) {
    console.error('‚ùå Error seeding languages:', error);
    throw error;
  }
}

export default seedLanguages;

// Run if called directly
if (require.main === module) {
  seedLanguages()
    .catch((e) => {
      console.error(e);
      process.exit(1);
    })
    .finally(async () => {
      await prisma.$disconnect();
    });
}